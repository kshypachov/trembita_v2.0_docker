#
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

##
postgresql_init:
  initJob:
    containerImageName: kshypachov/trembita_ss_v1.22.6-pg-init
    containerImageVer: v1.0.8
    env:
#      - name: PGHOST
#        value: uxp-postgres
      - name: PGPORT
        value: 5432
      - name: PGROOT_USER
        value: postgres
      - name: PGROOT_PASSWORD
        value: mysecretpassword
      - name: SERVERCONF_DB_USER
        value: serverconf
      - name: SERVERCONF_DB_PASS
        value: serverconfp
      - name: MESSAGELOG_DB_USER
        value: messagelog
      - name: MESSAGELOG_DB_PASS
        value: messagelogp
      - name: IDENTITY_DB_USER
        value: identityprovider
      - name: IDENTITY_DB_PASS
        value: identityproviderp
      - name: OPMONITOR_DB_USER
        value: opmonitor
      - name: OPMONITOR_DB_PASS
        value: opmonitorp
      - name: OPMONITOR_ADMIN_DB_USER
        value: opmonitor_admin
      - name: OPMONITOR_ADMIN_DB_PASS
        value: opmonitor_adminp



# Main config section for Trembita application
trembita_config:
  init_job:
    image: kshypachov/trembita_init_img:v1.0.2

  ss_to_db_access:
    PGPORT: 5432
    PGROOT_USER: postgres
    PGROOT_PASSWORD: mysecretpassword
    SERVERCONF_DB_USER: serverconf
    SERVERCONF_DB_PASS: serverconfp
    MESSAGELOG_DB_USER: messagelog
    MESSAGELOG_DB_PASS: messagelogp
    IDENTITY_DB_USER: identityprovider
    IDENTITY_DB_PASS: identityproviderp
    OPMONITOR_DB_USER: opmonitor
    OPMONITOR_DB_PASS: opmonitorp
    OPMONITOR_ADMIN_DB_USER: opmonitor_admin
    PMONITOR_ADMIN_DB_PASS: opmonitor_adminp



# section for define config maps.Config maps will connect to all containers deployed this helm chart
  configMaps:
    enabled: true  # Disable all configmaps and related mountpoints. If all configmaps disabled - need to set @ false @ there
    db_properties: # For testing only!!!!!! ConfigMap not suitable for storing sensitive data like a DB password
      enabled: true
      name: db-properties
      mountPath: /etc/uxp/db.properties
      subPath: db.properties

    local_ini:
      enabled: true
      name: local-ini
      mountPath: /etc/uxp/conf.d/local.ini
      subPath: local.ini

    default_uxp:
      enabled: true
      name: default-uxp
      mountPath: /etc/nginx/sites-enabled/default-uxp
      subPath: default-uxp

    uxp_identity_provider_rest_api:
      enabled: true
      name: uxp-identity-provider-rest-api
      mountPath: /etc/nginx/conf.d/uxp-identity-provider-rest-api-location.include
      subPath: uxp-identity-provider-rest-api-location.include

    uxp_seg_rest_api_ng_include:
      enabled: true
      name: uxp-securityserver-rest-api
      mountPath: /etc/nginx/conf.d/uxp-securityserver-rest-api-location.include
      subPath: uxp-securityserver-rest-api-location.include

    tokens_autologin:
      enabled: true
      name: tokens-autologin
      mountPath: /usr/share/uxp/bin/tokens-autologin.py
      subPath: tokens-autologin.py

    uxp_conf_client_logback:
      enabled: false
      name: conf-client-logback
      mountPath: /etc/uxp/conf.d/confclient-logback.xml
      subPath: confclient-logback.xml

    uxp_message_log_archiver_logback:
      enabled: true
      name: message-log-archiver-logback
      mountPath: /etc/uxp/conf.d/messagelog-archiver-logback.xml
      subPath: messagelog-archiver-logback.xml

    uxp_identity_provider_rest_api_logback:
      enabled: true
      name: identity-provider-rest-api-logback
      mountPath: /etc/uxp/conf.d/identity-provider-rest-api-logback.xml
      subPath: identity-provider-rest-api-logback.xml

    uxp_ocsp_cache_logback:
      enabled: true
      name: ocsp-cache-logback
      mountPath: /etc/uxp/conf.d/ocsp-cache-logback.xml
      subPath: ocsp-cache-logback.xml

    uxp_verifier_logback:
      enabled: true
      name: verifier
      mountPath: /etc/uxp/conf.d/verifier-rest-api-logback.xml
      subPath: verifier-rest-api-logback

    uxp_seg_rest_api_logback:
      enabled: true
      name: seg-rest-api
      mountPath: /etc/uxp/conf.d/securityserver-rest-api-logback.xml
      subPath: securityserver-rest-api-logback.xml

    uxp_proxy_logback:
      enabled: true
      name: proxy-logback
      mountPath: /etc/uxp/conf.d/proxy-logback.xml
      subPath: proxy-logback.xml

    uxp_monitor_agent_logback:
      enabled: true
      name: monitor-agent-logback
      mountPath: /etc/uxp/conf.d/proxy-monitor-agent-logback.xml
      subPath: proxy-monitor-agent-logback.xml

    uxp_monitor_agent_addon_logback:
      enabled: true
      name: monitor-agent-addon-logback
      mountPath: /etc/uxp/conf.d/addons/proxy-monitor-agent-logback.xml
      subPath: proxy-monitor-agent-logback.xml

    uxp_anchor:
      enabled: true
      name: uxp-config-anchor
      mountPath: /etc/uxp/configuration-anchor.xml
      subPath: configuration-anchor.xml

    uxp_license:
      enabled: true
      name: uxp-license
      mountPath: /etc/uxp/license.lic
      subPath: license.lic


# Section for configuration every separate pod
  trembita_configuration_client_pod:  # settins specific for configuration client component
    name: conf-client
    image: kshypachov/trembita_jb_uxp-conf-client-v1.22.7:v1.0.4
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
#      - usr-share-uxp
#      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
#      - db_properties
#      - local_ini
      - uxp_anchor
      - uxp_license
#      - db_properties
#      - uxp_conf_client_logback
    ephemeralVolumeRAM:
      - name: uxp-conf-client-java-cache # volume in tmpfs
        mountPath: /tmp/java
        sizeLimit: "100Mi"
      - name: uxp-conf-client-dummy # volume re defined by -D option, but still checked
        mountPath: /var/tmp/uxp
        sizeLimit: "2Mi"



  trembita_message_log_archiver_pod:  # settins specific for configuration client component
    name: message-log
    image: kshypachov/trembita_message_log_archiver_1.12.7:v1.0.2
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
      - usr-share-uxp
      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
      - db_properties
      - local_ini
      - uxp_message_log_archiver_logback
      - uxp_license


  trembita_identity_provider_rest_api_pod: # settins specific for configuration client component
    name: identity-rest-api
    image: kshypachov/trembita_jb_uxp-identity-provider-v1.22.7:v1.0.0
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
#      - etc-uxp
#      - usr-share-uxp
#      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
      - db_properties
#      - local_ini
#      - uxp_identity_provider_rest_api_logback
#      - uxp_anchor
#      - uxp_license
    ephemeralVolumeRAM:
      - name: identity-provider-java-cache
        mountPath: /tmp/bc_java/
        sizeLimit: "100Mi"
      - name: identity-provider-jetty-temp
        mountPath: /tmp/
        sizeLimit: "100Mi"
    access_tokens:
      generate_random_tokens: true
      security_server_client_id: 60997vl7jlgoi53zbyvv2k9iyny1rae2
      security_server_client_secret: QTK3fBuPu0v0m2DpvEees0AODujEcX3V


  trembita_ocsp_cache_pod:
    name: ocsp-cache
#    image: kshypachov/trembita_jb_uxp-ocsp-cache-v1.22.7:v1.0.0
    image: kshypachov/test-ocsp:f8bf702199e0
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
      - usr-share-uxp
      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
      - local_ini
      - db_properties
#      - uxp_ocsp_cache_logback
#      - uxp_license
    ephemeralVolumeRAM:
      - name: ocsp-cache # volume in tmpfs for store ocsp answers
        mountPath: /var/cache/uxp
        sizeLimit: "100Mi"
      - name: ocsp-cache-java-cache
        mountPath: /tmp/bc_java/
        sizeLimit: "100Mi"


  trembita_verifier_pod:
    name: verifier
    image: kshypachov/trembita_verifier_v1.22.7:v1.0.0
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
      - usr-share-uxp
      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
#      - db_properties
#      - local_ini
      - uxp_verifier_logback
#      - uxp_anchor
#      - uxp_license


  trembita_seg_rest_api_pod:
    name: seg-rest-api
    image: kshypachov/trembita_seg_rest_api_v1.22.7:v1.0.0
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
      - usr-share-uxp
      - var-lib-uxp
    configMaps: # add name of config maps which need to connect to this pod
      - local_ini
      - db_properties
      - uxp_seg_rest_api_logback
      - uxp_anchor
      - uxp_license

  trembita_proxy_pod:
    name: proxy
    image: kshypachov/trembita_proxy_v1.22.7:v1.0.5
    env:
      TZ: Europe/Kyiv
      UXP_TOKEN_PASS: 1234
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
      - usr-share-uxp
      - var-lib-uxp
    configMaps: # add name of config maps which need to connect to this pod
      - local_ini
      - db_properties
      - uxp_proxy_logback
      - uxp_anchor
      - uxp_license
    ingress:
      host: api.trembita.office
      secure_host: secure-api.trembita.office


  trembita_monitor_pod:
    name: monitor
    image: kshypachov/trembita_jb_uxp-monitor-agent-v1.22.7:v1.0.4
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
      - etc-uxp
#      - usr-share-uxp
#      - var-lib-uxp
    configMaps:  # add name of config maps which need to connect to this pod
      - db_properties
      - local_ini
#      - uxp_monitor_agent_logback
#      - uxp_monitor_agent_addon_logback
      - uxp_anchor
      - uxp_license
    ephemeralVolumeRAM:
      - name: java-cache # volume in tmpfs for store ocsp answers
        mountPath: /tmp/bc_java/
        sizeLimit: "100Mi"



  trembita_frontend_pod:
    name: frontend
    image:  kshypachov/trembita_frontend_v1.22.7:v1.0.2
    env:
      TZ: Europe/Kyiv
    sharedVolumes: # add name of shared volumes which need to connect to this pod
    configMaps: # add name of config maps which need to connect to this pod
      - default_uxp
      - uxp_identity_provider_rest_api
      - uxp_seg_rest_api_ng_include
    ingress:
      host: trembita.office


  sharedVolumes: # volumes which will connect to all trembita pods in this chart. Data will copy from original image (entire tembita server) during init phase
    etc-uxp:
      enabled: true
      initCopy: true
      size: 100Mi
      mountPath: /etc/uxp
      storageClassName: "longhorn-rwx"
      accessModes:
        - ReadWriteMany

    usr-share-uxp:
      enabled: true
      initCopy: true
      size: 1.5Gi
      mountPath: /usr/share/uxp/
      storageClassName: "longhorn-rwx"
      accessModes:
        - ReadWriteMany

    var-lib-uxp:
      enabled: true
      initCopy: true
      size: 15Gi
      mountPath: /var/lib/uxp/
      storageClassName: "longhorn-rwx"
      accessModes:
        - ReadWriteMany

    var-lib-uxp-messagelog:
      enabled: false
      initCopy: false
      size: 2Gi
      mountPath: /var/lib/uxp/messagelog/
      storageClassName: "longhorn-rwx"
      accessModes:
        - ReadWriteMany




minio:
#  nameOverride: "minio"
  fullnameOverride: minio
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  defaultBuckets: uxp-messagelog
  mode: standalone
  persistence:
    enabled: true
    size: 1Gi
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: minio.trembita.office

  apiIngress:
    enabled: true
    ingressClassName: "nginx"
    hostname: api.minio.trembita.office

postgresql:
  containerName: postgres
  image: postgres:16
  username: postgres
  password: mysecretpassword
  database: appdb
  port: 5432
  max_connections: 200

  persistence:
    enabled: true
    size: 1Gi
    storageClass: ""

  env:
    - name: PGDATA
      value: /var/lib/postgresql/data/pgdata
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: mysecretpassword
    - name: POSTGRES_DB
      value: appdb
