{{- if and .Values.trembita_config.web_ui_access.configMaps.enabled .Values.trembita_config.web_ui_access.configMaps.default_uxp.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.trembita_config.web_ui_access.configMaps.default_uxp.name }}
data:
  {{ .Values.trembita_config.web_ui_access.configMaps.default_uxp.subPath}}: |
    server {
    listen [::]:4001;
    #ssl ipv6only=off;

      ssl_certificate /etc/uxp/ssl/nginx.crt;
      ssl_certificate_key /etc/uxp/ssl/nginx.key;
      ssl_dhparam /etc/nginx/dhparam.pem;

      ssl_protocols TLSv1.3;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
      ssl_prefer_server_ciphers on;
      ssl_ecdh_curve secp384r1;
      ssl_session_tickets off;
      ssl_session_cache shared:SSL:10m;
      ssl_session_timeout 10m;

      keepalive_timeout 5 5;
      client_header_buffer_size 16k;

      #error_page 497 https://$host:$server_port$request_uri;

      location /test {
          return 200 "OK - nginx is working\n";
          add_header Content-Type text/plain;
      }

      # Deny all hidden file requests
      location ~ /\. {
        deny all;
        return 404;
      }

      # Include general headers. This is explicitly defined here, because directives are not inherited
      # from the previous levels if "add_header" is defined in the current level. And uxp-*-headers
      # contains "add_header".
      include conf.d/uxp-headers.include;

      # Include component specific headers
      include conf.d/uxp-*-headers.include;

{{- end }}

------

{{- if and .Values.trembita_config.web_ui_access.configMaps.enabled .Values.trembita_config.web_ui_access.configMaps.uxp_identity_provider_rest_api.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.trembita_config.web_ui_access.configMaps.uxp_identity_provider_rest_api.name }}
data:
  {{ .Values.trembita_config.web_ui_access.configMaps.uxp_identity_provider_rest_api.subPath}}: |
    # Identity Provider backend location.
    location /auth-api {
      proxy_pass http://127.0.0.1:8087;
    #  proxy_set_header Host $host:$server_port;
    #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #  proxy_set_header X-Forwarded-Proto https;
    #  proxy_set_header X-Forwarded-Port $server_port;
    #  proxy_redirect http:// https://;
      client_max_body_size 5M;

      location ~* oauth2-redirect.html$ {
        proxy_pass http://127.0.0.1:8087;
    #    proxy_set_header Host $host:$server_port;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto https;
    #    proxy_set_header X-Forwarded-Port $server_port;
    #    proxy_redirect http:// https://;
    #    client_max_body_size 5M;
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline';" always;
      }
    }

{{- end }}

